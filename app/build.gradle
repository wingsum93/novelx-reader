apply from: '../dependencies.gradle'
apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'

android {
    buildToolsVersion versions.buildTools
    compileSdkVersion versions.compileSdk

    defaultConfig {
        applicationId "com.ericho.example"
        minSdkVersion versions.minSdk
        targetSdkVersion versions.compileSdk
        versionCode versions.publishVersionCode
        versionName versions.publishVersion
        testInstrumentationRunner "com.ericho.example.EricRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'),
                'proguard-rules.pro',
                'retrofit2.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }
    buildFeatures{
        dataBinding true
    }
}
def fragment_version = "1.2.5"

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:" + versions.kotlin
    // kotlin coroutine
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.7"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.4"

    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.core:core-ktx:1.3.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.1'
    implementation 'com.google.android.material:material:1.2.0'
    //
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0"
    implementation "androidx.recyclerview:recyclerview:1.1.0"
    // For control over item selection of both touch and mouse driven selection
    implementation "androidx.recyclerview:recyclerview-selection:1.1.0-rc01"

    // Kotlin
    implementation "androidx.fragment:fragment-ktx:$fragment_version"
    // Testing Fragments in Isolation
    debugImplementation "androidx.fragment:fragment-testing:$fragment_version"
    // Koin for Kotlin
    implementation "org.koin:koin-core:$versions.koin"
    // Koin extended & experimental features
    implementation "org.koin:koin-core-ext:$versions.koin"
    // Koin AndroidX Scope features
    implementation "org.koin:koin-androidx-scope:$versions.koin"
    // Koin AndroidX ViewModel features
    implementation "org.koin:koin-androidx-viewmodel:$versions.koin"
    // Koin AndroidX Fragment features
    implementation "org.koin:koin-androidx-fragment:$versions.koin"
    // Koin AndroidX Experimental features
    implementation "org.koin:koin-androidx-ext:$versions.koin"
    // Material Dialog
    implementation "com.afollestad.material-dialogs:core:$versions.materialDialog"
    implementation "com.afollestad.material-dialogs:input:$versions.materialDialog"
    implementation "com.afollestad.material-dialogs:datetime:$versions.materialDialog"
    implementation "com.afollestad.material-dialogs:bottomsheets:$versions.materialDialog"
    // Jsoup
    implementation "org.jsoup:jsoup:1.13.1"
    // Okhttp
    implementation 'com.squareup.okhttp3:okhttp:4.8.1'
    implementation 'com.google.code.gson:gson:2.8.6'

    implementation "com.squareup.retrofit2:retrofit:$versions.retrofit"
    implementation "com.jakewharton.timber:timber:4.7.1"
    // Unit test
    testImplementation 'junit:junit:4.13'
    // UI test
    androidTestImplementation 'androidx.test:core:1.3.0'
    androidTestImplementation 'androidx.test:runner:1.3.0'
    androidTestImplementation 'androidx.test:rules:1.3.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation "androidx.test.espresso:espresso-core:$versions.espresso"
    androidTestImplementation "androidx.test.espresso:espresso-web:$versions.espresso"
    androidTestImplementation "androidx.test.espresso:espresso-idling-resource:$versions.espresso"
    // Koin Test
    androidTestImplementation "org.koin:koin-test:2.1.6"
}
// fix spam of androidx view log message
configurations.all {
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        def requested = details.requested
        if (requested.group == "androidx.appcompat") {
            if (!requested.name.startsWith("multidex")) {
                details.useVersion "1.+"
            }
        }
    }
}
apply from: '../spotless.gradle'